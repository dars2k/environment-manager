services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: app-env-manager-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-app-env-manager}
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "${MONGO_PORT:-27017}:27017"
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-env-manager-backend
    restart: unless-stopped
    environment:
      # Server Configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      
      # Database Configuration
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_DATABASE:-app-env-manager}?authSource=admin
      MONGODB_DATABASE: ${MONGO_DATABASE:-app-env-manager}
      
      # Security Configuration
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      SSH_KEY_ENCRYPTION_KEY: ${SSH_KEY_ENCRYPTION_KEY:-your-32-byte-encryption-key-here!}
      
      # CORS Configuration
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost}
    volumes:
      - ./backend/config:/app/config:ro
      - backend_logs:/app/logs
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app-env-manager-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
      - "${FRONTEND_HTTPS_PORT:-443}:443"
    # Optional: Mount custom certificates
    # volumes:
    #   - ./frontend/certs:/etc/nginx/certs:ro
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: app-env-manager-mongo-express
    restart: unless-stopped
    profiles:
      - debug
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD:-admin123}
    ports:
      - "${ME_PORT:-8081}:8081"
    depends_on:
      - mongodb
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  backend_logs:
    driver: local
